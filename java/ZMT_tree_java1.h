/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>

/* Header for class ZMT_tree_java */

#ifndef _Included_ZMT_tree_java
#define _Included_ZMT_tree_java
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     ZMT_tree_java
 * Method:    mCreate
 * Signature: (I)J
 */
JNIEXPORT jlong JNICALL Java_ZMT_1tree_1java_mCreate
  (JNIEnv *, jclass, jint);

/*
 * Class:     ZMT_tree_java
 * Method:    mFree
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_ZMT_1tree_1java_mFree
  (JNIEnv *, jclass, jlong);

/*
 * Class:     ZMT_tree_java
 * Method:    mSize
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_ZMT_1tree_1java_mSize
  (JNIEnv *, jclass, jlong);

/*
 * Class:     ZMT_tree_java
 * Method:    mNodeSize
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_ZMT_1tree_1java_mNodeSize
  (JNIEnv *, jclass, jlong);

/*
 * Class:     ZMT_tree_java
 * Method:    mIdLen
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_ZMT_1tree_1java_mIdLen
  (JNIEnv *, jclass, jlong);

/*
 * Class:     ZMT_tree_java
 * Method:    mCheckBalance
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_ZMT_1tree_1java_mCheckBalance
  (JNIEnv *, jclass, jlong);

/*
 * Class:     ZMT_tree_java
 * Method:    mCheck
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_ZMT_1tree_1java_mCheck
  (JNIEnv *, jclass, jlong);

/*
 * Class:     ZMT_tree_java
 * Method:    mAdd
 * Signature: (J[B)Z
 */
JNIEXPORT jboolean JNICALL Java_ZMT_1tree_1java_mAdd
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     ZMT_tree_java
 * Method:    mSearch
 * Signature: (J[B)Z
 */
JNIEXPORT jboolean JNICALL Java_ZMT_1tree_1java_mSearch
  (JNIEnv *, jclass, jlong, jbyteArray);

#ifdef __cplusplus
}
#endif
#endif
